{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pkpdatafactory"
		},
		"LS_SOURCEDB_Dynamic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SOURCEDB_Dynamic'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().PM_ServerName};Initial Catalog=@{linkedService().PM_Database};User ID=@{linkedService().PM_UserName};Password=@{linkedService().PM_Password}"
		},
		"LS_SourceDb_1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SourceDb_1'"
		},
		"LS_TargetDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_TargetDB'"
		},
		"LS_TargetDB_Dynamic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_TargetDB_Dynamic'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().PMT_ServerName};Initial Catalog=@{linkedService().PMT_DatabaseName};User ID=@{linkedService().PMT_User_Name};Password=@{linkedService().PMT_Password}"
		},
		"pkplinkservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'pkplinkservice'"
		},
		"pkpIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "pkpsourcedbserve.database.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_From_CSV_SQLTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Copy_From_CSV_SQLTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Circle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Circle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Domestic_2019_20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Domestic_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Foreign_2019_20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Foreign_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Domestic_2020_21",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Domestic_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Foreign_2020_21",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Foreign_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PKPBlobStorageTextSource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Tourism_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-07T03:07:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PKPBlobStorageTextSource1')]",
				"[concat(variables('factoryId'), '/datasets/DS_Tourism_Input_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_From_Source_TargetTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Copy_From_CSV_SQLTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"Circle",
										"MonumentName"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Circle",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Circle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Domestic_2019_20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Domestic_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Domestic_2020_21",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Foreign_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Foreign_2019_20",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Domestic_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " Foreign_2020_21",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Foreign_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": " PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PKPBlobStorageTextSource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Sourcedb_1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-06T18:09:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PKPBlobStorageTextSource1')]",
				"[concat(variables('factoryId'), '/datasets/DS_Sourcedb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_From_Tourism_Source_TargetSQLTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PL_Copy_From_Tourism_Source_TargetSQLTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SELECTTOURIST]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"SLNO"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SLNO",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SLNO",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Circle",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Circle",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonumentName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Domestic_2019_20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Domestic_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Foreign_2019_20",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foreign_2019_20",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Domestic_2020_21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Domestic_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Foreign_2020_21",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Foreign_2020_21",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Domestic",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PerGrowth_2021_21_2019_20_Foreign",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Tourism_Input_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Tourism_Output_Table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SP_Insert_Tourism",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_Copy_From_Tourism_Source_TargetSQLTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[INSERTTOURIST]"
						},
						"linkedServiceName": {
							"referenceName": "LS_TargetDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Reset_Parameter",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PL_Copy_From_Tourism_Source_TargetSQLTable",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[RESETPARAMETER]"
						},
						"linkedServiceName": {
							"referenceName": "LS_SourceDb_1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T16:51:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Tourism_Input_Table')]",
				"[concat(variables('factoryId'), '/datasets/DS_Tourism_Output_Table')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_SourceDb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Copy_TextFile_From_Source_To_Target_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check_the_File_exist",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Parameter_to_Check_the_TextFile_Existance",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check_the_File_exist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check_the_File_exist').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy_File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SourceText_File",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@pipeline().parameters.FileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TargetFoler_TextFile",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "File_Exist",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T05:49:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Parameter_to_Check_the_TextFile_Existance')]",
				"[concat(variables('factoryId'), '/datasets/DS_SourceText_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_TargetFoler_TextFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncreamentInsert_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_SourceDB_Dynamic",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select TableName, WatermarkValue as OldWatermarkValue from watermarktable where TableName = @{pipeline().parameters.TableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TargetDB_Watermark",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LKP_TargetDB_Dynamic",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(@{pipeline().parameters.ColumnName}) NewWatermarkValue\nfrom @{pipeline().parameters.TableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SourceDB_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"Database": {
										"value": "@{pipeline().parameters.Database}",
										"type": "Expression"
									},
									"ServerName": {
										"value": "@{pipeline().parameters.ServerName}",
										"type": "Expression"
									},
									"UserName": {
										"value": "@{pipeline().parameters.UserName}",
										"type": "Expression"
									},
									"Password": {
										"value": "@{pipeline().parameters.Password}",
										"type": "Expression"
									},
									"FileName": {
										"value": "@{pipeline().parameters.FileName}",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_SourceDB_Dynamic",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LKP_TargetDB_Dynamic",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select *\nfrom @{pipeline().parameters.TableName}\nwhere InsertDateTime > '@{activity('LKP_SourceDB_Dynamic').output.firstRow.OldWatermarkValue}'\nand InsertDateTime <= '@{activity('LKP_TargetDB_Dynamic').output.firstRow.NewWatermarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SourceDB_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"Database": {
										"value": "@{activity('LKP_TargetDB_Dynamic').output.firstRow}.{pipeline().parameters.Database}",
										"type": "Expression"
									},
									"ServerName": {
										"value": "@{activity('LKP_TargetDB_Dynamic').output}.pipeline().parameters.ServerName",
										"type": "Expression"
									},
									"UserName": {
										"value": "@{activity('LKP_TargetDB_Dynamic').output.firstRow}.pipeline().parameters.UserName",
										"type": "Expression"
									},
									"Password": {
										"value": "@{activity('LKP_TargetDB_Dynamic').output.firstRow}.pipeline().parameters.Password",
										"type": "Expression"
									},
									"FileName": {
										"value": "@{activity('LKP_TargetDB_Dynamic').output.firstRow}.pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TargetDB_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"ServerName": {
										"value": "@{activity('LKP_SourceDB_Dynamic').output.firstRow}.pipeline().parameters.Database",
										"type": "Expression"
									},
									"Database": {
										"value": "@{activity('LKP_SourceDB_Dynamic').output.firstRow}.pipeline().parameters.Database",
										"type": "Expression"
									},
									"UserName": {
										"value": "@{activity('LKP_SourceDB_Dynamic').output.firstRow}.pipeline().parameters.UserName",
										"type": "Expression"
									},
									"Password": {
										"value": "@{activity('LKP_SourceDB_Dynamic').output.firstRow}.pipeline().parameters.Password",
										"type": "Expression"
									},
									"FileName": {
										"value": "@{activity('LKP_SourceDB_Dynamic').output.firstRow}.pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "String"
					},
					"Database": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"ColumnName": {
						"type": "String"
					},
					"UserNamer": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-11T13:42:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_TargetDB_Watermark')]",
				"[concat(variables('factoryId'), '/datasets/DS_SourceDB_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_TargetDB_Dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Increamental_ForLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select TableName, WaterMarkColumn WaterMarkValue from ConfigurationTable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SourceDB_ForLoop",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_IncrementalLoad_ForEach",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TableName": {
												"value": "@item().TableName",
												"type": "Expression"
											},
											"WaterMarkValue": {
												"value": "@item().WaterMarkValue",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T07:02:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SourceDB_ForLoop')]",
				"[concat(variables('factoryId'), '/pipelines/PL_IncrementalLoad_ForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalInsert_l_Order')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKP_TargetDB_Watermark",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select  \n TableName, WatermarkValue as OldWaterMarkValue\n from [dbo].[watermarktable] where TableName = 'orders'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TargetDB_Watermark",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LKP_SourceDB_Order",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max([InsertDateTime]) as NewWaterMarkValue from [dbo].[orders]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SourceDB_Order",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy_TargetDB_Order",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP_TargetDB_Watermark",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LKP_SourceDB_Order",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from orders where InsertDateTime > '@{activity('LKP_TargetDB_Watermark').output.firstRow.OldWaterMarkValue}'\nand InsertDateTime <= '@{activity('LKP_SourceDB_Order').output.firstRow.NewWaterMarkValue} '",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "OrderID",
											"physicalType": "int",
											"precision": 10
										},
										"sink": {
											"name": "OrderID",
											"physicalType": "int",
											"precision": 10
										}
									},
									{
										"source": {
											"name": "ProductID",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ProductID",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CustomerID",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "UnitPrice",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "Quantity",
											"physicalType": "int",
											"precision": 10
										},
										"sink": {
											"name": "Quantity",
											"physicalType": "int",
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SourceDB_Order",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TargetDB_Orders",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@activity('LKP_SourceDB_Order').output.firstRow.OLdWaterMarkValue",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "SP_UpdateWaterMarkTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_TargetDB_Order",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSetWatermark]",
							"storedProcedureParameters": {
								"NewTime": {
									"value": {
										"value": "@activity('LKP_SourceDB_Order').output.firstRow.NewWaterMarkValue",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('LKP_TargetDB_Watermark').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_TargetDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-12T06:22:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_TargetDB_Watermark')]",
				"[concat(variables('factoryId'), '/datasets/DS_SourceDB_Order')]",
				"[concat(variables('factoryId'), '/datasets/DS_TargetDB_Orders')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalLoad_ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from  '@{pipeline().parameters.TableName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SourceDB_ForLoop",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SourceDB_ForLoop",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"TableName": {
						"type": "String"
					},
					"WaterMarkValue": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-13T06:47:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SourceDB_ForLoop')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkppipelinrecopydata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "xyz",
				"activities": [
					{
						"name": "Copy data1",
						"description": "pkp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "pkpDatasetSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "pkpdatasettarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-06T17:39:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pkpDatasetSource')]",
				"[concat(variables('factoryId'), '/datasets/pkpdatasettarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkppipelinrecopydata_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "abc",
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "pkpdatasettarget1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-08T05:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/pkpdatasettarget1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DF_Order_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TargetDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Orderid",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Amount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Category",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Order_Table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OLTP_ListOfOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "List of Orders.csv",
						"container": "oltp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "CustomerName",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OLTP_OrderDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Order Details.csv",
						"container": "oltp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OLTP_SalesTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sales target.csv",
						"container": "oltp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PKPBlobStorageTextSource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Tourism1.csv",
						"container": "pkpcontblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Circle",
						"type": "String"
					},
					{
						"name": "MonumentName",
						"type": "String"
					},
					{
						"name": " Domestic_2019_20",
						"type": "String"
					},
					{
						"name": " Foreign_2019_20",
						"type": "String"
					},
					{
						"name": " Domestic_2020_21",
						"type": "String"
					},
					{
						"name": " Foreign_2020_21",
						"type": "String"
					},
					{
						"name": " PerGrowth_2021_21_2019_20_Domestic",
						"type": "String"
					},
					{
						"name": " PerGrowth_2021_21_2019_20_Foreign",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Parameter_to_Check_the_TextFile_Existance')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "pkpcontainertarget"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SourceDB_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SOURCEDB_Dynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"PM_Database": {
							"value": "@dataset().Database",
							"type": "Expression"
						},
						"PM_ServerName": {
							"value": "@dataset().ServerName",
							"type": "Expression"
						},
						"PM_UserName": {
							"value": "@dataset().UserName",
							"type": "Expression"
						},
						"PM_Password": {
							"value": "@dataset().Password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Database": {
						"type": "String"
					},
					"ServerName": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().FileName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SOURCEDB_Dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SourceDB_ForLoop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SourceDb_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WaterMarkColumn",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ConfigurationTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SourceDb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SourceDB_Order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SourceDb_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SourceDb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SourceText_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "pkpcontainersource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sourcedb_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SourceDb_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SLNOI",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Circle",
						"type": "varchar"
					},
					{
						"name": "MonumentName",
						"type": "varchar"
					},
					{
						"name": "Domestic_2019_20",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Foreign_2019_20",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Domestic_2020_21",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Foreign_2020_21",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "PerGrowth_2021_21_2019_20_Domestic",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PerGrowth_2021_21_2019_20_Foreign",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Tourist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SourceDb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TargetDB_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TargetDB_Dynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"PMT_ServerName": {
							"value": "@dataset().ServerName",
							"type": "Expression"
						},
						"PMT_DatabaseName": {
							"value": "@dataset().Database",
							"type": "Expression"
						},
						"PMT_User_Name": {
							"value": "@dataset().UserName",
							"type": "Expression"
						},
						"PMT_Password": {
							"value": "@dataset().Password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ServerName": {
						"type": "String"
					},
					"Database": {
						"type": "String"
					},
					"UserName": {
						"type": "String"
					},
					"Password": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().FileName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB_Dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TargetDB_Orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TargetDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InsertDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TargetDB_Watermark')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TargetDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TargetFoler_TextFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "pkpcontainertarget"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Tourism_Input_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SourceDb_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SLNO",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Circle",
						"type": "varchar"
					},
					{
						"name": "MonumentName",
						"type": "varchar"
					},
					{
						"name": "Domestic_2019_20",
						"type": "varchar"
					},
					{
						"name": "Foreign_2019_20",
						"type": "varchar"
					},
					{
						"name": "Domestic_2020_21",
						"type": "varchar"
					},
					{
						"name": "Foreign_2020_21",
						"type": "varchar"
					},
					{
						"name": "PerGrowth_2021_21_2019_20_Domestic",
						"type": "varchar"
					},
					{
						"name": "PerGrowth_2021_21_2019_20_Foreign",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Tourist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SourceDb_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Tourism_Output_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_TargetDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Tourist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_TargetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkpDatasetSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Product.txt",
						"container": "pkpcontainersource"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "%PDF-1.5",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkpdatasettarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Tourism.csv",
						"container": "pkpcontblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Circle",
						"type": "String"
					},
					{
						"name": "MonumentName",
						"type": "String"
					},
					{
						"name": " Domestic_2019_20",
						"type": "String"
					},
					{
						"name": " Foreign_2019_20",
						"type": "String"
					},
					{
						"name": " Domestic_2020_21",
						"type": "String"
					},
					{
						"name": " Foreign_2020_21",
						"type": "String"
					},
					{
						"name": " PerGrowth_2021_21_2019_20_Domestic",
						"type": "String"
					},
					{
						"name": " PerGrowth_2021_21_2019_20_Foreign",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkpdatasettarget1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pkplinkservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "pkpcontainertarget"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pkplinkservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SOURCEDB_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"PM_Database": {
						"type": "string"
					},
					"PM_ServerName": {
						"type": "String"
					},
					"PM_UserName": {
						"type": "string"
					},
					"PM_Password": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SOURCEDB_Dynamic_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SourceDb_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SourceDb_1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_TargetDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_TargetDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_TargetDB_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"PMT_ServerName": {
						"type": "String"
					},
					"PMT_DatabaseName": {
						"type": "String"
					},
					"PMT_User_Name": {
						"type": "String"
					},
					"PMT_Password": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_TargetDB_Dynamic_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkplinkservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('pkplinkservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pkpIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"nodeSize": "Standard_D8_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 8
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('pkpIR_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_OLTP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_OLTP_ListOfOrders",
								"type": "DatasetReference"
							},
							"name": "DFListOfOrders"
						},
						{
							"dataset": {
								"referenceName": "DS_OLTP_OrderDetails",
								"type": "DatasetReference"
							},
							"name": "DFOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_DF_Order_Table",
								"type": "DatasetReference"
							},
							"name": "sinkOrder"
						}
					],
					"transformations": [
						{
							"name": "ListofOrderSelect"
						},
						{
							"name": "OrderDetailSelect"
						},
						{
							"name": "joinOrder"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Order ID} as string,",
						"          {Order Date} as string,",
						"          CustomerName as string,",
						"          State as string,",
						"          City as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DFListOfOrders",
						"source(output(",
						"          {Order ID} as string,",
						"          Amount as decimal(10,0),",
						"          Profit as decimal(10,0),",
						"          Quantity as long,",
						"          Category as string,",
						"          {Sub-Category} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DFOrderDetails",
						"DFListOfOrders select(mapColumn(",
						"          {Order ID},",
						"          {Order Date},",
						"          CustomerName,",
						"          State,",
						"          City",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ListofOrderSelect",
						"DFOrderDetails select(mapColumn(",
						"          {Order ID},",
						"          Amount,",
						"          Profit,",
						"          Quantity,",
						"          Category,",
						"          {Sub-Category}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrderDetailSelect",
						"ListofOrderSelect, OrderDetailSelect join(ListofOrderSelect@{Order ID} == OrderDetailSelect@{Order ID},",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinOrder",
						"joinOrder sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Orderid as string,",
						"          City as string,",
						"          Amount as decimal(10,2),",
						"          Profit as decimal(10,2),",
						"          Quantity as long,",
						"          Category as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Orderid = ListofOrderSelect@{Order ID},",
						"          City,",
						"          Amount,",
						"          Profit,",
						"          Quantity,",
						"          Category",
						"     )) ~> sinkOrder"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OLTP_ListOfOrders')]",
				"[concat(variables('factoryId'), '/datasets/DS_OLTP_OrderDetails')]",
				"[concat(variables('factoryId'), '/datasets/DS_DF_Order_Table')]"
			]
		}
	]
}